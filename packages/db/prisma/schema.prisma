// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Post {
  id      String @id @default(cuid())
  title   String
  content String
}

model userProfile {
  id        String   @id
  createdAt DateTime @default(now())
  height    Float
  // add more later
}

model measurementEntry {
  id        String   @id @default(cuid())
  userId    String
  createdAt DateTime @default(now())
  weight    Float
  // add more later

  @@index([userId])
}

model exercise {
  id                      String                    @id @default(cuid())
  name                    String
  primaryMuscleGroup      muscleGroup               @relation("PrimaryMuscleGroup", fields: [primaryMuscleGroupId], references: [id])
  primaryMuscleGroupId    String
  secondaryMuscleGroups   muscleGroup[]             @relation("SecondaryMuscleGroup")
  description             String?                   @db.Text
  commonPitfalls          String?                   @db.Text
  thumbnailUrl            String?
  gifUrl                  String?
  measurementType         String
  workoutExercise         workoutExercise[]
  workoutTemplateExercise workoutTemplateExercise[]

  @@index([primaryMuscleGroupId])
}

model muscleGroup {
  id                 String     @id @default(cuid())
  name               String
  primaryExercises   exercise[] @relation("PrimaryMuscleGroup")
  secondaryExercises exercise[] @relation("SecondaryMuscleGroup")
}

model workout {
  id        String            @id @default(cuid())
  name      String
  startTime DateTime          @default(now())
  endTime   DateTime?
  exercises workoutExercise[]
  timer     Int?
  notes     String?           @db.Text

  templateId String?
  template   workoutTemplate? @relation(fields: [templateId], references: [id])

  userId String

  @@index([userId])
  @@index([templateId])
}

model workoutExercise {
  id         String               @id @default(cuid())
  order      Int
  exercise   exercise             @relation(fields: [exerciseId], references: [id])
  exerciseId String
  sets       workoutExerciseSet[]
  timer      Int?
  notes      String?              @db.Text
  Workout    workout?             @relation(fields: [workoutId], references: [id])
  workoutId  String?

  @@index([exerciseId])
  @@index([workoutId])
}

model workoutExerciseSet {
  id                String           @id @default(cuid())
  weight            Float
  numReps           Int
  complete          Boolean
  order             Int
  workoutExercise   workoutExercise? @relation(fields: [workoutExerciseId], references: [id])
  workoutExerciseId String?

  @@index([workoutExerciseId])
}

model workoutTemplate {
  id                  String                    @id @default(cuid())
  createdAt           DateTime                  @default(now())
  updatedAt           DateTime                  @updatedAt
  userId              String
  name                String
  description         String?                   @db.Text
  exercises           workoutTemplateExercise[]
  workout             workout[]
  workoutPlan         workoutPlan?              @relation(fields: [workoutPlanId], references: [id])
  workoutPlanId       String?
  workoutPlanTemplate workoutPlanTemplate[]

  @@index([userId])
  @@index([workoutPlanId])
}

model workoutTemplateExercise {
  id                String                       @id @default(cuid())
  order             Int
  workoutTemplate   workoutTemplate              @relation(fields: [workoutTemplateId], references: [id])
  workoutTemplateId String
  exercise          exercise                     @relation(fields: [exerciseId], references: [id])
  exerciseId        String
  sets              workoutTemplateExerciseSet[]

  @@index([workoutTemplateId])
  @@index([exerciseId])
}

model workoutTemplateExerciseSet {
  id                        String                  @id @default(cuid())
  workoutTemplateExercise   workoutTemplateExercise @relation(fields: [workoutTemplateExerciseId], references: [id])
  workoutTemplateExerciseId String
  weight                    Float?
  numReps                   Int?
  time                      Int?
  distance                  Float?

  @@index([workoutTemplateExerciseId])
}

model workoutPlan {
  id        String            @id @default(cuid())
  templates workoutTemplate[]
  userId    String?

  @@index([userId])
}

model workoutPlanTemplate {
  id         String          @id @default(cuid())
  order      Int
  template   workoutTemplate @relation(fields: [templateId], references: [id])
  templateId String

  @@index([templateId])
}
